[tool.poetry]
name = "personalparakeet"
version = "3.0.0"
description = "Real-time dictation system with transparent floating UI"
authors = ["PersonalParakeet Team"]
readme = "README.md"
packages = [{include = "personalparakeet", from = "src"}]
include = [
    "src/personalparakeet/models/*.onnx",
    "src/personalparakeet/models/*.pt",
    "src/personalparakeet/models/*.json",
    "src/personalparakeet/assets/**/*"
]

# Poetry source configuration for PyTorch with CUDA 12.8
[[tool.poetry.source]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
priority = "explicit"  # Only specified packages use this source

[[tool.poetry.source]]
name = "pytorch-nightly"
url = "https://download.pytorch.org/whl/nightly/cu128"
priority = "explicit"  # For testing bleeding-edge builds

[tool.poetry.dependencies]
python = "^3.11"

# PyTorch Stack - RTX 5090 (Blackwell sm_120) Support
# These use the explicit pytorch-cu128 source for CUDA 12.8 compatibility
torch = { version = "2.7.0", source = "pytorch-cu128" }
torchvision = { version = "0.22.0", source = "pytorch-cu128" }
torchaudio = { version = "2.7.0", source = "pytorch-cu128" }

# Uncomment below to use nightly builds instead
# torch = { version = "^2.9.0.dev20250804", source = "pytorch-nightly", allow-prereleases = true }
# torchvision = { version = "*", source = "pytorch-nightly", allow-prereleases = true }
# torchaudio = { version = "*", source = "pytorch-nightly", allow-prereleases = true }

# ML/Audio Processing Stack
numpy = "^1.26.0"  # Pinned for PyTorch 2.7 compatibility
scipy = "^1.11.0"
nemo-toolkit = { version = "^2.4.0", extras = ["asr"] }
pytorch-lightning = "^2.0.0"
torchmetrics = "^0.11.0"
hydra-core = "^1.3.2"
omegaconf = "^2.3.0"

# Audio I/O
sounddevice = "^0.4.6"
soundfile = "^0.12.0"
pyaudio = "^0.2.11"

# UI Framework
flet = "^0.28.3"

# System Integration
python-dotenv = "^1.0.0"
keyboard = "^0.13.5"
pynput = "^1.8.1"
pyperclip = "^1.9.0"

# Data & Configuration
dataclasses-json = "^0.6.0"
networkx = "^3.5"
packaging = "^25.0"
cython = "^3.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
ruff = "^0.8.0"
openai-whisper = "^20250625"
gtts = "^2.5.4"

[tool.poetry.scripts]
personalparakeet = "personalparakeet.main:main"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"