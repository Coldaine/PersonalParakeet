[tool.poetry]
name = "personalparakeet"
version = "3.0.0"
description = "Real-time dictation system with transparent floating UI"
authors = ["PersonalParakeet Team"]
readme = "README.md"
packages = [{include = "personalparakeet", from = "src"}]
include = [
    "src/personalparakeet/models/*.onnx",
    "src/personalparakeet/models/*.pt",
    "src/personalparakeet/models/*.json",
    "src/personalparakeet/assets/**/*"
]

# PyTorch sources removed - managed via requirements-torch.txt
# Poetry's dependency resolver conflicts with PyTorch's versioning scheme
# See requirements-torch.txt and SETUP.md for PyTorch installation

[tool.poetry.dependencies]
python = "^3.11"

# PyTorch Stack - Managed via requirements-torch.txt for RTX 5090 support
# Poetry cannot handle PyTorch's complex CUDA versioning properly, so we exclude it here
# and manage it separately via pip install -r requirements-torch.txt
# This approach is recommended by PyTorch team for projects requiring specific CUDA versions

# ML/Audio Processing Stack
numpy = ">=1.26.0,<2.0"  # Pinned <2.0 for Numba compatibility (required by NeMo)
scipy = "^1.11.0"
# NeMo toolkit requires specific versions - managed via requirements-ml.txt
# nemo-toolkit = { version = "^2.4.0", extras = ["asr"] }  # Moved to requirements-ml.txt
# pytorch-lightning = "^2.0.0"  # Dependency of NeMo, managed via requirements-ml.txt
# torchmetrics = "^0.11.0"  # Dependency of NeMo, managed via requirements-ml.txt
hydra-core = "^1.3.2"
omegaconf = "^2.3.0"

# Audio I/O
sounddevice = "^0.4.6"
soundfile = "^0.12.0"
pyaudio = "^0.2.11"

# UI Framework
flet = "^0.28.3"

# System Integration
python-dotenv = "^1.0.0"
pyperclip = "^1.9.0"

# Data & Configuration
dataclasses-json = "^0.6.0"
networkx = "^3.5"
packaging = "^25.0"
cython = "^3.1.2"
nvidia-ml-py3 = "^7.352.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
ruff = "^0.8.0"
openai-whisper = "^20250625"
gtts = "^2.5.4"

[tool.poetry.scripts]
personalparakeet = "personalparakeet.main:main"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"